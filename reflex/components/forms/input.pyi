"""Stub file for input.py"""
# ------------------- DO NOT EDIT ----------------------
# This file was generated by `scripts/pyi_generator.py`!
# ------------------------------------------------------

from typing import Optional, overload, Union, Dict
from reflex.components.libs.chakra import ChakraComponent
from reflex.components.component import Component
from reflex.vars import Var, BaseVar, ComputedVar
from reflex.event import EventChain

class Input(ChakraComponent):
    @overload
    @classmethod
    def create(cls, *children, value: Optional[Union[Var[str], str]] = None, default_value: Optional[Union[Var[str], str]] = None, placeholder: Optional[Union[Var[str], str]] = None, type_: Optional[Union[Var[str], str]] = None, error_border_color: Optional[Union[Var[str], str]] = None, focus_border_color: Optional[Union[Var[str], str]] = None, is_disabled: Optional[Union[Var[bool], bool]] = None, is_invalid: Optional[Union[Var[bool], bool]] = None, is_read_only: Optional[Union[Var[bool], bool]] = None, is_required: Optional[Union[Var[bool], bool]] = None, variant: Optional[Union[Var[str], str]] = None, size: Optional[Union[Var[str], str]] = None, **props) -> "Input": ...  # type: ignore

class InputGroup(ChakraComponent):
    @overload
    @classmethod
    def create(cls, *children, **props) -> "InputGroup": ...  # type: ignore

class InputLeftAddon(ChakraComponent):
    @overload
    @classmethod
    def create(cls, *children, **props) -> "InputLeftAddon": ...  # type: ignore

class InputRightAddon(ChakraComponent):
    @overload
    @classmethod
    def create(cls, *children, **props) -> "InputRightAddon": ...  # type: ignore

class InputLeftElement(ChakraComponent):
    @overload
    @classmethod
    def create(cls, *children, **props) -> "InputLeftElement": ...  # type: ignore

class InputRightElement(ChakraComponent):
    @overload
    @classmethod
    def create(cls, *children, **props) -> "InputRightElement": ...  # type: ignore
